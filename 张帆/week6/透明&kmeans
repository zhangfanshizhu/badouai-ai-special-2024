import cv2
import numpy as np
import matplotlib.pyplot as plt


def transparent():
    img = cv2.imread('photo1.jpg')
    # 复制图片数据
    result3 = img.copy()
    # 注意这里src和dst的输入并不是图像，而是图像对应的顶点坐标。
    # 需要变形或者截取的图片顶点
    src = np.float32([[207, 151], [517, 285], [17, 601], [343, 731]])
    dst = np.float32([[0, 0], [337, 0], [0, 488], [337, 488]])
    print(img.shape)    # 打印图片
    # 生成透视变换矩阵；进行透视变换
    m = cv2.getPerspectiveTransform(src, dst)
    print("warpMatrix:")
    print(m) # 打印图片
    result = cv2.warpPerspective(result3, m, (337, 488))
    cv2.imshow("src", img)
    cv2.imshow("result", result)
    cv2.waitKey(0)


def my_kms():
    # 读取原始图像灰度颜色
    img = cv2.imread('lenna.png', 0)
    print(img.shape)

    # 获取图像高度、宽度
    rows, cols = img.shape[:]

    # 图像二维像素转换为一维
    data = img.reshape((rows * cols, 1))
    data = np.float32(data)

    # 停止条件 (type,max_iter,epsilon)
    criteria = (cv2.TERM_CRITERIA_EPS +
                cv2.TERM_CRITERIA_MAX_ITER, 10, 1.0)

    # 设置标签
    flags = cv2.KMEANS_RANDOM_CENTERS

    # K-Means聚类 聚集成4类
    compactness, labels, centers = cv2.kmeans(data, 4, None, criteria, 10, flags)

    # 生成最终图像
    dst = labels.reshape((img.shape[0], img.shape[1]))

    # 用来正常显示中文标签
    plt.rcParams['font.sans-serif'] = ['SimHei']

    # 显示图像
    titles = [u'原始图像', u'聚类图像']
    images = [img, dst]
    for i in range(2):
        plt.subplot(1, 2, i + 1), plt.imshow(images[i], 'gray'),
        plt.title(titles[i])
        plt.xticks([]), plt.yticks([])
    plt.show()


if __name__ == '__main__':
    transparent()
    my_kms()

